============ initial bytecode ================

[variant baseline]
fun explicate_drop::test0(): u8 {
     var $t0: u8
     var $t1: &u8
     var $t2: &u8
     var $t3: u8
  0: $t3 := 42
  1: $t2 := borrow_local($t3)
  2: $t1 := infer($t2)
  3: $t0 := read_ref($t1)
  4: return $t0
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun explicate_drop::test0(): u8 {
     var $t0: u8
     var $t1: &u8
     var $t2: &u8
     var $t3: u8
     # live vars:
  0: $t3 := 42
     # live vars: $t3
  1: $t2 := borrow_local($t3)
     # live vars: $t2
  2: $t1 := move($t2)
     # live vars: $t1
  3: $t0 := read_ref($t1)
     # live vars: $t0
  4: return $t0
}

============ after MemorySafetyProcessor: ================

[variant baseline]
fun explicate_drop::test0(): u8 {
     var $t0: u8
     var $t1: &u8
     var $t2: &u8
     var $t3: u8
     # live vars:
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
  0: $t3 := 42
     # live vars: $t3
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
  1: $t2 := borrow_local($t3)
     # live vars: $t2
     # graph: {L256=local($t3)[borrow(false) -> L257],L257=local($t2)[]}
     # local_to_label: {$t2=L257,$t3=L256}
     # global_to_label: {}
     # moved: {}
     #
  2: $t1 := move($t2)
     # live vars: $t1
     # graph: {L256=local($t3)[borrow(false) -> L257],L257=local($t2)[skip -> L513],L513=local($t1)[]}
     # local_to_label: {$t1=L513,$t2=L257,$t3=L256}
     # global_to_label: {}
     # moved: {$t2}
     #
  3: $t0 := read_ref($t1)
     # live vars: $t0
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t1,$t2}
     #
  4: return $t0
}

============ after ExplicitDrop: ================

[variant baseline]
fun explicate_drop::test0(): u8 {
     var $t0: u8
     var $t1: &u8
     var $t2: &u8
     var $t3: u8
  0: $t3 := 42
  1: $t2 := borrow_local($t3)
  2: $t1 := move($t2)
  3: $t0 := read_ref($t1)
  4: return $t0
}
