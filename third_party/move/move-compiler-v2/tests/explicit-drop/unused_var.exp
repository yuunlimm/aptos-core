
Diagnostics:
warning: Function `0x42::explicate_drop::unused_var` is unused: it has no current callers and is private to its module.
  ┌─ tests/explicit-drop/unused_var.move:2:2
  │
2 │ ╭     fun unused_var() {
3 │ │         let _x = 42;
4 │ │     }
  │ ╰─────^

warning: Function `0x42::explicate_drop::unused_arg` is unused: it has no current callers and is private to its module.
  ┌─ tests/explicit-drop/unused_var.move:6:2
  │
6 │ ╭     fun unused_arg<T: drop>(x: T) {
7 │ │     }
  │ ╰─────^

warning: Function `0x42::explicate_drop::unused_call_assign` is unused: it has no current callers and is private to its module.
   ┌─ tests/explicit-drop/unused_var.move:13:2
   │
13 │ ╭     fun unused_call_assign() {
14 │ │         let _x = id(42);
15 │ │     }
   │ ╰─────^

============ initial bytecode ================

[variant baseline]
fun explicate_drop::id<#0>($t0: #0): #0 {
     var $t1: #0
  0: $t1 := infer($t0)
  1: return $t1
}


[variant baseline]
fun explicate_drop::unused_arg<#0>($t0: #0) {
  0: return ()
}


[variant baseline]
fun explicate_drop::unused_call_assign() {
     var $t0: u64
     var $t1: u64
  0: $t1 := 42
  1: $t0 := explicate_drop::id<u64>($t1)
  2: return ()
}


[variant baseline]
fun explicate_drop::unused_var() {
  0: return ()
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun explicate_drop::id<#0>($t0: #0): #0 {
     var $t1: #0
     # live vars: $t0
  0: $t1 := move($t0)
     # live vars: $t1
  1: return $t1
}


[variant baseline]
fun explicate_drop::unused_arg<#0>($t0: #0) {
     # live vars:
  0: return ()
}


[variant baseline]
fun explicate_drop::unused_call_assign() {
     var $t0: u64
     var $t1: u64
     # live vars:
  0: $t1 := 42
     # live vars: $t1
  1: $t0 := explicate_drop::id<u64>($t1)
     # live vars:
  2: return ()
}


[variant baseline]
fun explicate_drop::unused_var() {
     # live vars:
  0: return ()
}

============ after MemorySafetyProcessor: ================

[variant baseline]
fun explicate_drop::id<#0>($t0: #0): #0 {
     var $t1: #0
     # live vars: $t0
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
  0: $t1 := move($t0)
     # live vars: $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0}
     #
  1: return $t1
}


[variant baseline]
fun explicate_drop::unused_arg<#0>($t0: #0) {
     # live vars:
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
  0: return ()
}


[variant baseline]
fun explicate_drop::unused_call_assign() {
     var $t0: u64
     var $t1: u64
     # live vars:
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
  0: $t1 := 42
     # live vars: $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
  1: $t0 := explicate_drop::id<u64>($t1)
     # live vars:
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t1}
     #
  2: return ()
}


[variant baseline]
fun explicate_drop::unused_var() {
     # live vars:
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
  0: return ()
}

============ after ExplicitDrop: ================

[variant baseline]
fun explicate_drop::id<#0>($t0: #0): #0 {
     var $t1: #0
  0: $t1 := move($t0)
  1: return $t1
}


[variant baseline]
fun explicate_drop::unused_arg<#0>($t0: #0) {
  0: destroy($t0)
  1: return ()
}


[variant baseline]
fun explicate_drop::unused_call_assign() {
     var $t0: u64
     var $t1: u64
  0: $t1 := 42
  1: $t0 := explicate_drop::id<u64>($t1)
  2: return ()
}


[variant baseline]
fun explicate_drop::unused_var() {
  0: return ()
}
