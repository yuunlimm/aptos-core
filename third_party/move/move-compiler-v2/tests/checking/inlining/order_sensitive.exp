// ---- Model Dump
module 0x42::OrderSensitiveTest1 {
    spec fun $inline_fun1(a: u64,b: u64): u64 {
        Mul(a, b)
    }
    spec fun $inline_fun2(a: u64,b: u64): u64 {
        Add(OrderSensitiveTest1::$inline_fun1(a, b), Mul(2, OrderSensitiveTest1::$inline_fun3(a, b)))
    }
    spec fun $inline_fun3(a: u64,b: u64): u64 {
        Add(Mul(a, b), 2)
    }
} // end 0x42::OrderSensitiveTest1
module 0x42::OrderSensitiveTest2 {
    use 0x42::OrderSensitiveTest1; // resolved as: 0x42::OrderSensitiveTest1
    spec fun $inline_fun1(a: u64,b: u64): u64 {
        Add(Mul(a, b), 3)
    }
    spec fun $inline_fun2(a: u64,b: u64): u64 {
        Add(Add(OrderSensitiveTest1::$inline_fun2(OrderSensitiveTest2::$inline_fun1(a, b), OrderSensitiveTest2::$inline_fun3(a, b)), Mul(3, OrderSensitiveTest2::$inline_fun1(a, b))), Mul(5, OrderSensitiveTest2::$inline_fun3(a, b)))
    }
    spec fun $inline_fun3(a: u64,b: u64): u64 {
        Add(Mul(a, b), 4)
    }
} // end 0x42::OrderSensitiveTest2
module 0x42::OrderSensitiveTest3 {
    use 0x42::OrderSensitiveTest2; // resolved as: 0x42::OrderSensitiveTest2
    public fun fun2(a: u64,b: u64): u64 {
        Add<u64>({
          let (a: u64, _) = Tuple(Mul<u64>(7, Add<u64>(Mul<u64>(a, b), 5)), b);
          Add<u64>(Add<u64>({
            let (a$2$: u64, b$2$: u64) = Tuple({
              let (a$0$: u64, _) = Tuple(a, b);
              Add<u64>(Mul<u64>(a$0$, b), 3)
            }, {
              let (a$1$: u64, _) = Tuple(a, b);
              Add<u64>(Mul<u64>(a$1$, b), 4)
            });
            Add<u64>({
              let (a$3$: u64, b$3$: u64) = Tuple(a$2$, b$2$);
              Mul<u64>(a$3$, b$3$)
            }, Mul<u64>(2, {
              let (a$4$: u64, b$4$: u64) = Tuple(a$2$, b$2$);
              Add<u64>(Mul<u64>(a$4$, b$4$), 2)
            }))
          }, Mul<u64>(3, {
            let (a$5$: u64, _) = Tuple(a, b);
            Add<u64>(Mul<u64>(a$5$, b), 3)
          })), Mul<u64>(5, {
            let (a$6$: u64, _) = Tuple(a, b);
            Add<u64>(Mul<u64>(a$6$, b), 4)
          }))
        }, Mul<u64>(9, Add<u64>(Mul<u64>(a, b), 6)))
    }
    spec fun $fun1(a: u64,b: u64): u64 {
        Add(Mul(a, b), 5)
    }
    spec fun $fun2(a: u64,b: u64): u64 {
        Add(OrderSensitiveTest2::$inline_fun2(Mul(7, OrderSensitiveTest3::$fun1(a, b)), b), Mul(9, OrderSensitiveTest3::$fun3(a, b)))
    }
    spec fun $fun3(a: u64,b: u64): u64 {
        Add(Mul(a, b), 6)
    }
} // end 0x42::OrderSensitiveTest3
