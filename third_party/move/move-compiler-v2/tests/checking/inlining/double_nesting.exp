// ---- Model Dump
module 0x42::mathtest2 {
    spec fun $fun2(a: u64,b: u64,c: u64): u64 {
        Cast(Add(Add(Mul(7, Cast(a)), Mul(11, Cast(b))), Mul(13, Cast(c))))
    }
} // end 0x42::mathtest2
module 0x42::mathtest {
    spec fun $fun1(a: u64,b: u64,c: u64): u64 {
        Cast(Add(Add(Mul(2, Cast(a)), Mul(3, Cast(b))), Mul(5, Cast(c))))
    }
} // end 0x42::mathtest
module 0x42::test {
    use 0x42::mathtest; // resolved as: 0x42::mathtest
    use 0x42::mathtest2; // resolved as: 0x42::mathtest2
    private fun test_nested_fun1() {
        Tuple();
        Tuple()
    }
    spec fun $test_nested_fun1() {
        {
          let a: u64 = mathtest::$fun1(2, mathtest::$fun1(3, mathtest2::$fun2(4, 5, 6), 7), mathtest2::$fun2(8, 9, mathtest::$fun1(10, mathtest2::$fun2(11, 12, 13), 14)));
          Tuple()
        }
    }
} // end 0x42::test
